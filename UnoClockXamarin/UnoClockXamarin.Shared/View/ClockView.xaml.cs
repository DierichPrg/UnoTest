using System;
using System.Threading;
using Windows.UI.Xaml.Controls;
using UnoClockXamarin.ViewModel;

// The Blank Page item template is documented at https://go.microsoft.com/fwlink/?LinkId=234238

namespace UnoClockXamarin.View
{
    /// <summary>
    /// An empty page that can be used on its own or navigated to within a Frame.
    /// </summary>
    public sealed partial class ClockView : Page
    {
        // synchronizationContext utilized to post to UI Thread render all UIElements
        private readonly SynchronizationContext synchronizationContext;

        // a factory that have the only reponsability to create all UIElements of clock
        private readonly ClockFactory clockFactory;

        // a viewModel that contains de state of view
        public ClockViewModel ViewModel { get; }

        public ClockView()
        {
            this.synchronizationContext = SynchronizationContext.Current;
            DataContext = ViewModel = new ClockViewModel();

            this.InitializeComponent();

            this.clockFactory = new ClockFactory(
                500, // width and height of clock
                10, // Thinkness of hour pointer
                5, // Thinkness of minute pointer
                1, // Thinkness of second pointer
                7, // Thinkness of ellipses hour
                3); // Thinkness of ellipse clock border

            this.DrawClock(DateTime.Now); // draw first time on UI Thread

            ViewModel.DateTimeChanged += ViewModelOnDateTimeChanged; // add event handler to update every time that Timer on viewModel elapse
        }

        private void ViewModelOnDateTimeChanged(object sender, DateTime e)
        {
            // how this event come from worker thread, its necessary use synchronizationContext to send to UI Thread
            // worker thread dont have access to any UI element
            this.synchronizationContext.Post((x) => this.DrawClock(e), null);
        }

        private void DrawClock(DateTime date)
        {
            // clear all canva
            clockCanva.Children.Clear();

            // add all UIElement on canva that was generated by ClockFactory
            foreach (var uiElement in this.clockFactory.GetClock(date))
            {
                clockCanva.Children.Add(uiElement);
            }
        }
    }
}
